version: '3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    env_file:
      - .env
    environment:
      - DEFAULT_HOST=${DEFAULT_HOST}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    networks:
      - domain
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-certs
    env_file:
      - .env
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    networks:
      - domain
  workspace:
    build:
      context: ./code-server
      dockerfile: ./Dockerfile
      args:
        USERNAME: $USERNAME
        USER_UID: $CUID
        USER_GID: $CGID
        NODE_VERSION: $NODE_VERSION
    container_name: workspace-${WORKSPACE_NAME}
    privileged: true
    env_file:
      - .env
    ports:
      - 3000:3000
      - 4080:4080
      - 4090:4090
      - 27017:27017
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${WORKSPACE_NAME}.${DEFAULT_HOST}
      - LETSENCRYPT_HOST=${WORKSPACE_NAME}.${DEFAULT_HOST}
      - PASSWORD=${PASSWORD}
      - SHELL=/bin/bash
      - DOCKER_USER=${USERNAME}
    restart: always
    volumes:
      - ${HOME}/${WORKSPACE_NAME}/.config:/home/${USERNAME}/.config
      - ${HOME}/.ssh:/home/${USERNAME}/.ssh
      - ${HOME}/${WORKSPACE_NAME}/projects:/home/${USERNAME}/projects
      - docker:/var/lib/docker
      - code-server:/home/${USERNAME}/.local/share/code-server
    user: "${CUID}:${CGID}"
    networks:
      - domain

volumes:
  docker:
  code-server:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  dcerts:

networks:
  domain:
